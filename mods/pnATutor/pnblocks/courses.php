<?php
function pnATutor_coursesblock_init()
{
    // Security
    pnSecAddSchema('pnATutor:courses:', 'Block title::');
}


function pnATutor_coursesblock_info()
{
    return array('text_type'      => 'courses',
                 'module'         => 'pnATutor',
                 'text_type_long' => 'Available courses within ATutor',
                 'allow_multiple' => true,
                 'form_content'   => false,
                 'form_refresh'   => false,
                 'show_preview'   => true);
}


function pnATutor_coursesblock_display($blockinfo)
{
  if (!pnSecAuthAction(0,
                         'pnATutor:courses:',
                         "$blockinfo[title]::",
                         ACCESS_READ)) {
        return false;
    }


   // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['amount'])) {
        $vars['amount'] = 5;
    }

    if (empty($vars['trim'])) {
        $vars['trim'] = 30;
    }
    if (empty($vars['usejava'])) {
        $vars['usejava'] = 'n';
    }
    if (empty($vars['loadjava'])) {
        $vars['loadjava'] = 'n';
    }
    if (empty($vars['enrolled'])) {
        $vars['enrolled'] = 'n';
    }

$amount=$vars['amount'];
$trim = $vars['trim'] ;
$usejava= $vars['usejava'];
$loadjava = $vars['loadjava'] ;
$enrolled =$vars['enrolled'] ;

$db=pnModGetVar('pnATutor', '_db');
$prefix=pnModGetVar('pnATutor', '_prf');
$std_db = pnConfigGetVar('dbname');

$pcModInfo = pnModGetInfo(pnModGetIDFromName('pnATutor'));
$ModName = pnVarPrepForOS($pcModInfo['directory']);

$username=pnUserGetVar(uname);

$true = mysql_select_db($db) or die("cannot select database: " . mysql_error()) ;
if ($enrolled == 'n'){
$result = mysql_query("select course_id, title, description from $prefix".courses."  order by course_id DESC limit ".$amount." ") or die("cannot select from table: " . mysql_error());
} else {
	if (pnUserLoggedIn()) {
		$result1 =mysql_query( "SELECT member_id FROM $prefix".members." WHERE login='$username' ");
		if (mysql_num_rows($result1)< 1){
			$userid = 0;
		}else {
			$row99 = mysql_fetch_row($result1) ;
			$userid = $row99[0];
		}

		$result = mysql_query("SELECT $prefix".courses.".course_id, title, description FROM $prefix".courses.", $prefix".course_enrollment." WHERE  $prefix".course_enrollment.".course_id = $prefix".courses.".course_id and $prefix".course_enrollment.".member_id = ".$userid." order by title limit ".$amount."  ") or die("cannot select from table: " . mysql_error());
	}
}
$items = array();
while (list($id, $title, $summary) = mysql_fetch_row($result)) {
    if ($trim != 0){
        if (strlen($title) > $trim) {
            $title = substr($title,0,$trim);
            $title .= "...";
        }
    }

	$items[] = array('id' => $id,'title' => $title ,'summary' => $summary);

}

$url1="index.php?module=pnATutor&func=main";
$urllink = _PNATUTORMODULE ;

$true = mysql_select_db($std_db) ;

// Create output object
// Note that for a block the corresponding module must be passed.
$pnRender =& new pnRender('pnATutor');
$pnRender->assign('items', $items);
$pnRender->assign('url1', $url1);
$pnRender->assign('urllink', $urllink);
$pnRender->assign('loadjava', $loadjava);
$pnRender->assign('usejava', $usejava);
$pnRender->assign('modname', $ModName);



// Populate block info and pass to theme
$blockinfo['content'] = $pnRender->fetch('pnATutor_block_courses.htm');
themesideblock($blockinfo);
}




function pnATutor_coursesblock_modify($blockinfo)
{

    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['amount'])) {
        $vars['amount'] = 5;
    }

    if (empty($vars['trim'])) {
        $vars['trim'] = 30;
    }
    if (empty($vars['usejava'])) {
        $vars['usejava'] = 'n';
    }
    if (empty($vars['loadjava'])) {
        $vars['loadjava'] = 'n';
    }
    if (empty($vars['enrolled'])) {
        $vars['enrolled'] = 'y';
    }
    // Create output object
	$pnRender =& new pnRender('pnATutor');

	// As Admin output changes often, we do not want caching.
	$pnRender->caching = false;

    // assign the approriate values
	$pnRender->assign('amount', $vars['amount']);
	$pnRender->assign('trim', $vars['trim']);
	$pnRender->assign('usejava', $vars['usejava']);
	$pnRender->assign('loadjava', $vars['loadjava']);
	$pnRender->assign('enrolled', $vars['enrolled']);

    // Return the output that has been generated by this function
	return $pnRender->fetch('pnATutor_block_courses_modify.htm');
}

function pnATutor_coursesblock_update($blockinfo)
{
   // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

	// alter the corresponding variable
    $vars['amount'] = pnVarCleanFromInput('amount');
    $vars['trim'] = pnVarCleanFromInput('trim');
    $vars['usejava'] = pnVarCleanFromInput('usejava');
    $vars['loadjava'] = pnVarCleanFromInput('loadjava');
    $vars['enrolled'] = pnVarCleanFromInput('enrolled');

	// write back the new contents
    $blockinfo['content'] = pnBlockVarsToContent($vars);

	// clear the block cache
	$pnRender =& new pnRender('pnATutor');
	$pnRender->clear_cache('pnATutor_block_courses.htm');

    return $blockinfo;

}

?>
